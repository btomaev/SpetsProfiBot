from aiogram import Bot, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery, ReplyKeyboardRemove, ReplyKeyboardMarkup, KeyboardButton
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from aiogram.utils.callback_data import CallbackData
import os, time, asyncio, datetime
from threading import Thread

button_info = KeyboardButton('‚ÑπÔ∏è–£—Å–ª–æ–≤–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞‚ÑπÔ∏è')
button_go = KeyboardButton('üî•–ü—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ —Ä–∞–±–æ—Ç–µüî•')
button_share = KeyboardButton('üó£Ô∏è–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞üó£Ô∏è')
button_rate = KeyboardButton('‚≠ê–†–µ–π—Ç–∏–Ω–≥‚≠ê')
button_help = KeyboardButton('üôè–ü–æ–º–æ—â—åüôè')
button_rules = KeyboardButton('üìñ–†–∞–±–æ—Ç–∞ —Å —Å–µ—Ä–≤–∏—Å–æ–ºüìñ')
button_billing = KeyboardButton('üßæ–Æ—Ä. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüßæ')
button_back = KeyboardButton('‚Ü©Ô∏è–ù–∞–∑–∞–¥‚Ü©Ô∏è')
main_kb = ReplyKeyboardMarkup(row_width=2, resize_keyboard=True, one_time_keyboard=True)
main_kb.add(button_info)
main_kb.add(button_go)
main_kb.add(button_share)
main_kb.row(button_rate, button_help)
info_kb = ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
info_kb.add(button_rules)
info_kb.add(button_billing)
info_kb.add(button_back)
memory_storage = MemoryStorage()
TOKEN = "1956727734:AAHm4PPZBtPbczwiL4ENhN3Q0VEITukT-ps"
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)
buy_callback = CallbackData("item_name", "sub")
task = ""
sub = ""
state = "none"
chat_id = -1001548837699
if(not os.path.exists('settings')):
   os.mkdir('settings')
   open('settings/tasknumber.txt', 'x').write("1")
if(not os.path.exists('tasks')):
   os.mkdir('tasks')
if(not os.path.exists('users')):
   os.mkdir('users')

async def on_shutdown(dp):
    await bot.close()

@dp.message_handler(commands=['start'])
async def send_welcome(msg: types.Message):
   # try:
      #await msg.answer("–ú—ã –∑–¥–µ—Å—å [–°–ø–µ—Ü–ü—Ä–æ—Ñ–∏](https://t.me/joinchat/SrR3PhtTmHExNzUy)", parse_mode='markdown')
      if(not os.path.exists('users/'+str(msg["from"].id))):
         os.mkdir('users/'+str(msg["from"].id))
         open('users/'+str(msg["from"].id)+'/rating.txt', 'x').write("0")
      await msg.reply("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n–Ø –ë–æ—Ç —Å–µ—Ä–≤–∏—Å–∞ ¬´–°–ø–µ—Ü–ü—Ä–æ—Ñ–∏¬ª\n–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å —É—Å–ª–æ–≤–∏—è–º–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ –∏ –∂–º–∏—Ç–µ ¬´–ü–µ—Ä–µ–π—Ç–∏ –≤ —á–∞—Ç¬ª\n–•–æ—Ä–æ—à–µ–π —Ä–∞–±–æ—Ç—ã!üëçüèª",reply_markup=main_kb)
   # except:
      # return
    
@dp.message_handler(commands=['task'])
async def send_welcome(msg: types.Message):
   # try:
      is_admin = False
      for admin in await bot.get_chat_administrators(chat_id):
         if(msg["from"].id == admin["user"].id):
            is_admin = True
      if(is_admin):
         num = open('settings/tasknumber.txt', 'r').read()
         sub = 'üõ†üôãüèª‚Äç‚ôÇÔ∏è–ó–∞–¥–∞–Ω–∏–µ –Ω–æ–º–µ—Ä: '+num+"\n"+str(msg.text).replace("&&&","")[6:]
         txt = 'üõ†üôãüèª‚Äç‚ôÇÔ∏è–ó–∞–¥–∞–Ω–∏–µ –Ω–æ–º–µ—Ä: '+num+"\n"+str(msg.text)[:msg.text.find("&&&")][6:]
         # name = str(msg.date).replace("-","").replace(" ","").replace(":","")
         name = num
         os.mkdir('tasks/'+name)
         open('tasks/'+name+"/text.txt", 'w').write(msg.text+":::"+str(msg["from"].id))
         cbd = "select:"+name
         await bot.send_message(chat_id, text=txt ,reply_markup=InlineKeyboardMarkup(row_width=2).insert(InlineKeyboardButton(text="–Ø –±–µ—Ä—É", callback_data=cbd)))
         await msg.answer("–ó–∞–¥–∞–Ω–∏–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω–æ")
         open('settings/tasknumber.txt', 'w').write(str(int(num)+1))
         # await msg.answer("[–°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞–Ω–∏–µ]()")
   # except:
      # return

@dp.message_handler(content_types=['text'])
async def get_text_messages(msg: types.Message):
   if(msg.text=='‚ÑπÔ∏è–£—Å–ª–æ–≤–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞‚ÑπÔ∏è'):
      temp_msg = await msg.reply("–°–µ–∫—É–Ω–¥–æ—á–∫—É...",reply_markup=info_kb)
   if(msg.text=='üìñ–†–∞–±–æ—Ç–∞ —Å —Å–µ—Ä–≤–∏—Å–æ–ºüìñ'):
      await msg.reply("""
üëãüèª–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –í–∞—Å –º–∞—Å—Ç–µ—Ä–∞!
–≠—Ç–æ —á–∞—Ç —Å –∑–∞–∫–∞–∑–∞–º–∏ –ø–æ –ú–æ—Å–∫–≤–µ! –°–∞–Ω—Ç–µ—Ö–Ω–∏–∫–∞, —ç–ª–µ–∫—Ç—Ä–∏–∫–∞, –º—É–∂ –Ω–∞ —á–∞—Å, –º–µ–ª–∫–∏–π —Ä–µ–º–æ–Ω—Ç, —Å–±–æ—Ä–∫–∞ –º–µ–±–µ–ª–∏, —Ä–µ–º–æ–Ω—Ç —Ç–µ—Ö–Ω–∏–∫–∏, –æ—Ç–¥–µ–ª–æ—á–Ω—ã–µ —Ä–∞–±–æ—Ç—ã –∏ –º–Ω–æ–≥–æ–µ —Ä–∞–∑–Ω–æ–µ.
–£—Å–ª–æ–≤–∏—è —Ä–∞–±–æ—Ç—ã —Å —Å–µ—Ä–≤–∏—Å–æ–º:
1.–°–æ–±–ª—é–¥–µ–Ω–∏–µ –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ–≥–æ–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–µ–π —Å –∫–ª–∏–µ–Ω—Ç–æ–º (–≤–ª–∏—è–µ—Ç –Ω–∞ –≤–∞—à —Ä–µ–π—Ç–∏–Ω–≥)
2.–ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ —Å –∞–¥–º–∏–Ω–∏—Å—Ç–∞—Ü–∏–µ–π —á–∞—Ç–∞ (–ø–æ –≤–æ–∑–Ω–∏–∫—à–∏–º –≤–æ–ø—Ä–æ—Å–∞–º)
3.–û–ø–ª–∞—Ç–∞ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—É–º–º—ã (–¥–∞–ª–µ–µ "–ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏–π –≤–∑–Ω–æ—Å") –≤ —Ä–∞–∑–º–µ—Ä–µ 90 —Ä—É–±–ª–µ–π.
–û–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–ª–∏—Ç—Å—è –Ω–∞ —É—Å–ª–æ–≤–∏—è—Ö –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è
–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (–∏–º—è, –∞–¥—Ä–µ—Å, –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞) –∑–∞–∫–∞–∑—á–∏–∫–∞.

–°—Ö–µ–º–∞ —Ä–∞–±–æ—Ç—ã:
1.–í —á–∞—Ç–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–Ø –ë–ï–†–£"
2.–ë–µ—Ä–µ—Ç–µ –∑–∞—è–≤–∫—É, –µ—Å–ª–∏ –≤–∞–º –ø–æ–¥—Ö–æ–¥–∏—Ç.
3.–û–ø–ª–∞—á–∏–≤–∞–µ—Ç–µ "–ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏–π –≤–∑–Ω–æ—Å"
4.–°–≤—è–∑—ã–≤–∞–µ—Ç–µ—Å—Ç—å —Å –∫–ª–∏–µ–Ω—Ç–æ–º –∏ –¥–æ–≥–æ–≤–∞—Ä–∏–≤–∞–µ—Ç–µ—Å—Ç—å –æ –≤—Ä–µ–º–µ–Ω–∏ –∏ —Å—É–º–º–º–µ —Ä–∞–±–æ—Ç—ã.
5.–ï—Å–ª–∏ –¥–æ–≥–æ–≤–æ—Ä–∏–ª–∏—Å—å - –∂–º–µ—Ç–µ "–í –†–ê–ë–û–¢–ï". –ó–∞—è–≤–∫–∞ —Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è –∏–∑ –æ–±—â–µ–≥–æ —á–∞—Ç–∞ –∏ –∑–∞–∫—Ä–µ–ø–ª—è–µ—Ç—Å—è –∑–∞ –í–∞–º–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–≤—ã—à–∞—è –í–∞—à —Ä–µ–π—Ç–∏–Ω–≥.
–î–æ–ø–æ–ª–Ω–µ–Ω–∏–µ* - –∑–∞—è–≤–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–µ—Ä–≤—ã–º 3-–º –º–∞—Å—Ç–µ—Ä–∞–º –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ.

–£–≤–∞–∂–∞–µ–º—ã–π –º–∞—Å—Ç–µ—Ä! –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏–π –≤–∑–Ω–æ—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 90 —Ä—É–±–ª–µ–π. –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –í–∞–º –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —Å–≤—è–∑–∏ —Å –∑–∞–∫–∞–∑—á–∏–∫–æ–º (–∏–º—è,–∞–¥—Ä–µ—Å,–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞)

–•–æ—Ä–æ—à–µ–π —Ä–∞–±–æ—Ç—ã!ü§ù
–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º- –ê–î–ú–ò–ù  @staslev1""", reply_markup=info_kb)
   if(msg.text=='üßæ–Æ—Ä. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüßæ'):
      await msg.reply("""
111674, –†–æ—Å—Å–∏—è, –ú–æ—Å–∫–≤–∞. —É–ª,–û—Ç–∫—Ä—ã—Ç–æ–µ —à–æ—Å—Å–µ 6 –∫11 –∫–≤ 39
Email: comfort.2—á4@mail.ru
Tel: +79990402423
–ò–ù–î–ò–í–ò–î–£–ê–õ–¨–ù–´–ô –ü–†–ï–î–ü–†–ò–ù–ò–ú–ê–¢–ï–õ–¨ –õ–ï–í–ß–ï–ù–ö–û –°–¢–ê–ù–ò–°–õ–ê–í –î–ú–ò–¢–†–ò–ï–í–ò–ß,
–ò–ù–ù
253501674317,
–û–ì–†–ù
321253600078420
–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
692361, –†–û–°–°–ò–Ø, –ü–†–ò–ú–û–†–°–ö–ò–ô –ö–†–ê–ô, –Ø–ö–û–í–õ–ï–í–°–ö–ò–ô –†-–ù, –°–ï–õ–û –Ø–ö–û–í–õ–ï–í–ö–ê, –ü–û–ß–¢–û–í–´–ô –ü–ï–†, –î 31""", reply_markup=info_kb)
   if(msg.text=='üó£Ô∏è–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞üó£Ô∏è'):
      temp_msg = await msg.reply("–ü—Ä–∏–≤–µ—Ç! –ï—Å—Ç—å –æ—Ç–ª–∏—á–Ω—ã–π —Å–µ—Ä–≤–∏—Å –≥–¥–µ –º–æ–∂–Ω–æ –≤–∑—è—Ç—å –∑–∞–∫–∞–∑. –í–æ—Ç —Å—Å—ã–ª–∫–∞ @SpetsProfiBot –ø–µ—Ä–µ—Ö–æ–¥–∏ –∏ –∂–º–∏ Start", reply_markup=main_kb)
   if(msg.text=='‚≠ê–†–µ–π—Ç–∏–Ω–≥‚≠ê'):
      await msg.reply("–°–∏—Å—Ç–µ–º–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.", reply_markup=main_kb)
   if(msg.text=='üôè–ü–æ–º–æ—â—åüôè'):
      await msg.reply("–ü–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–æ–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å —Å—é–¥–∞: @staslev1\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∑–∞ –ø–æ–º–æ—â—å—é –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏, —É–±–µ–¥–∏—Ç–µ—Å—å\n—á—Ç–æ –≤–∞—à –≤–æ–ø—Ä–æ—Å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ç—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è –∏ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –Ω–µ–≥–æ –Ω–µ—Ç –≤ —Ä–∞–∑–¥–µ–ª–µ üìñ–ü—Ä–∞–≤–∏–ª–∞üìñ –∏–ª–∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.", reply_markup=main_kb)
   if(msg.text=='‚Ü©Ô∏è–ù–∞–∑–∞–¥‚Ü©Ô∏è'):
      temp_msg = await msg.reply("–°–µ–∫—É–Ω–¥–æ—á–∫—É...",reply_markup=main_kb)
   if(msg.text=='üí∞–ü—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ —Ä–∞–±–æ—Ç–µüí∞'):
      await msg.answer("–í—Å–µ –∑–∞–∫–∞–∑—ã –ø–æ –º–æ—Å–∫–≤–µ –º—ã —Ä–∞–∑–º–µ—â–∞–µ–º –∑–¥–µ—Å—å:\n[–°–ø–µ—Ü–ü—Ä–æ—Ñ–∏](https://t.me/joinchat/SrR3PhtTmHExNzUy)", parse_mode='markdown', reply_markup=main_kb)


@dp.callback_query_handler(text_contains="select")
async def selecting(call: CallbackQuery):
   # try:
      callback_data = call.data
      dt = text=open('tasks/'+callback_data[7:]+"/text.txt", 'r').read()
      cbd = "cancel:"+callback_data[7:]
      msg = await bot.send_message(call["from"].id, dt.replace("&&&","")[6:dt.find(":::")-3], reply_markup=InlineKeyboardMarkup(row_width=2).insert(InlineKeyboardButton(text="–í—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ", callback_data="finish:"+callback_data[7:])).insert(InlineKeyboardButton(text="–û—Ç–∫–∞–∑–∞—Ç—å—Å—è", callback_data=cbd)))
      open('tasks/'+callback_data[7:]+"/msgid", 'w').write(str(msg.message_id))
      await call["message"].delete()
      name = ""
      if(call["from"].last_name):
         name = call["from"].first_name+" "+call["from"].last_name
      else:
         name = call["from"].first_name
      await bot.send_message(dt[dt.find(":::")+3:], text="\["+str(call["from"].id)+"]\n["+name+"](tg://user?id="+str(call["from"].id)+")"+"\n–í–∑—è–ª –∑–∞–¥–∞–Ω–∏–µ –Ω–æ–º–µ—Ä: "+callback_data[7:], reply_markup=InlineKeyboardMarkup(row_width=2).insert(InlineKeyboardButton(text="–ó–∞–±—Ä–∞—Ç—å", callback_data="depriv:"+callback_data[7:])), parse_mode='markdown')
      #await waitedmsg(10, str(call["from"].id))
   # except:
      # return

@dp.callback_query_handler(text_contains="cancel")
async def canceltask(call: CallbackQuery):
   try:
      await call["message"].delete()
      callback_data = call.data
      txt = open('tasks/'+callback_data[7:]+"/text.txt", 'r').read()
      cbd = "select:"+callback_data[7:]
      dt = text=open('tasks/'+callback_data[7:]+"/text.txt", 'r').read()
      if(call["from"].last_name):
         name = call["from"].first_name+" "+call["from"].last_name
      else:
         name = call["from"].first_name
      await bot.send_message(chat_id, text=txt[:txt.find("&&&")][6:dt.find(":::")-3] ,reply_markup=InlineKeyboardMarkup(row_width=2).insert(InlineKeyboardButton(text="–Ø –±–µ—Ä—É", callback_data=cbd)))
      await bot.send_message(dt[dt.find(":::")+3:], text="\["+str(call["from"].id)+"]\n["+name+"](tg://user?id="+str(call["from"].id)+")"+"\n–û—Ç–∫–∞–∑–∞–ª—Å—è –æ—Ç –∑–∞–¥–∞–Ω–∏—è –Ω–æ–º–µ—Ä: "+callback_data[7:], parse_mode='markdown')
   except:
      return

@dp.callback_query_handler(text_contains="finish")
async def finishtask(call: CallbackQuery):
   # try:
      await call["message"].edit_reply_markup(reply_markup=InlineKeyboardMarkup())
      callback_data = call.data
      cbd = "resend:"+callback_data[7:]
      dt = text=open('tasks/'+callback_data[7:]+"/text.txt", 'r').read()
      if(call["from"].last_name):
         name = call["from"].first_name+" "+call["from"].last_name
      else:
         name = call["from"].first_name
      await bot.send_message(dt[dt.find(":::")+3:], text="\["+str(call["from"].id)+"]\n["+name+"](tg://user?id="+str(call["from"].id)+")"+"\n–í—ã–ø–æ–ª–Ω–∏–ª –∑–∞–¥–∞–Ω–∏–µ –Ω–æ–º–µ—Ä: "+callback_data[7:], reply_markup=InlineKeyboardMarkup(row_width=2).insert(InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å –≤ –æ–±–æ—Ä–æ—Ç", callback_data=cbd)), parse_mode='markdown')
      os.remove(callback_data[7:])
   # except:
      # return

@dp.callback_query_handler(text_contains="depriv")
async def canceltask(call: CallbackQuery):
   # try:
      callback_data = call.data
      txt = open('tasks/'+callback_data[7:]+"/text.txt", 'r').read()
      msgid = open('tasks/'+callback_data[7:]+"/msgid", 'r').read()
      cbd = "select:"+callback_data[7:]
      dt = text=open('tasks/'+callback_data[7:]+"/text.txt", 'r').read()
      await bot.delete_message(call["message"].text[call["message"].text.find("[")+1:call["message"].text.find("]")],msgid)
      await call["message"].edit_reply_markup(reply_markup=InlineKeyboardMarkup())
      await bot.send_message(chat_id, text=txt[:txt.find("&&&")][6:dt.find(":::")-3], reply_markup=InlineKeyboardMarkup(row_width=2).insert(InlineKeyboardButton(text="–Ø –±–µ—Ä—É", callback_data=cbd)))
      if(call["from"].last_name):
         name = call["from"].first_name+" "+call["from"].last_name
      else:
         name = call["from"].first_name
      await bot.send_message(dt[dt.find(":::")+3:], text="–í—ã –∑–∞–±—Ä–∞–ª–∏ –∑–∞–¥–∞–Ω–∏–µ —É ["+call["message"].text[call["message"].text.find("\n")+1:call["message"].text.find("\n").find("\n")]+"](tg://user?id="+call["message"].text[call["message"].text.find("[")+1:call["message"].text.find("]")]+")\n"+dt.replace("&&&","")[6:dt.find(":::")-3], parse_mode='markdown')
   # except:
      # return

@dp.callback_query_handler(text_contains="resend")
async def canceltask(call: CallbackQuery):
   # try:
      callback_data = call.data
      txt = open('tasks/'+callback_data[7:]+"/text.txt", 'r').read()
      cbd = "select:"+callback_data[7:]
      dt = text=open('tasks/'+callback_data[7:]+"/text.txt", 'r').read()
      await call["message"].edit_reply_markup(reply_markup=InlineKeyboardMarkup())
      await bot.send_message(chat_id, text=txt[:txt.find("&&&")][6:dt.find(":::")-3], reply_markup=InlineKeyboardMarkup(row_width=2).insert(InlineKeyboardButton(text="–Ø –±–µ—Ä—É", callback_data=cbd)))
      if(call["from"].last_name):
         name = call["from"].first_name+" "+call["from"].last_name
      else:
         name = call["from"].first_name
      await bot.send_message(dt[dt.find(":::")+3:], text="–í—ã –≤–µ—Ä–Ω—É–ª–∏ –∑–∞–¥–∞–Ω–∏–µ –≤ –æ–±–æ—Ä–æ—Ç.\n"+dt.replace("&&&","")[6:dt.find(":::")-3], parse_mode='markdown')
   # except:
      # return

def timer(time, id):
   print("timer")
   asyncio.run(waitedmsg(time, id))

async def waitedmsg(time, id):
   while datetime.datetime.now()<=datetime.datetime.now()+datetime.timedelta(seconds = 10):
      pass
   await bot.send_message(id, text="–í—ã —Å–≤—è–∑–∞–ª–∏—Å—å —Å –∑–∞–∫–∞–∑—á–∏–∫–æ–º?", parse_mode='markdown')

if __name__ == '__main__':
   print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω, –≤—Å–µ –û–ö")
   executor.start_polling(dp, on_shutdown=on_shutdown)
